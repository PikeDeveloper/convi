// DO NOT EDIT. This is code generated via package:intl/generate_localized.dart
// This is a library that provides messages for a en locale. All the
// messages from the main program should be duplicated here with the same
// function name.

// Ignore issues from commonly used lints in this file.
// ignore_for_file:unnecessary_brace_in_string_interps, unnecessary_new
// ignore_for_file:prefer_single_quotes,comment_references, directives_ordering
// ignore_for_file:annotate_overrides,prefer_generic_function_type_aliases
// ignore_for_file:unused_import, file_names

import 'package:intl/intl.dart';
import 'package:intl/message_lookup_by_library.dart';

final messages = new MessageLookup();

typedef String MessageIfAbsent(String messageStr, List<dynamic> args);

class MessageLookup extends MessageLookupByLibrary {
  String get localeName => 'en';

  final messages = _notInlinedMessages(_notInlinedMessages);
  static _notInlinedMessages(_) => <String, Function> {
    "Angle" : MessageLookupByLibrary.simpleMessage("Angle"),
    "Area" : MessageLookupByLibrary.simpleMessage("Area"),
    "ChangeMultiplyOrDivide" : MessageLookupByLibrary.simpleMessage("The sense of inequality is reversed if a negative number is multiplied \n or divided by its two members"),
    "Cone" : MessageLookupByLibrary.simpleMessage("Cone"),
    "ConeTrunk" : MessageLookupByLibrary.simpleMessage("Cone trunk"),
    "ConversionFactor" : MessageLookupByLibrary.simpleMessage("Conversion Factor:"),
    "CosineTheorem" : MessageLookupByLibrary.simpleMessage("Cosine theorem"),
    "Cube" : MessageLookupByLibrary.simpleMessage("Cube"),
    "Cylinder" : MessageLookupByLibrary.simpleMessage("Cylinder"),
    "Degrees" : MessageLookupByLibrary.simpleMessage("Degrees (Â°)"),
    "Density" : MessageLookupByLibrary.simpleMessage("Density"),
    "Energy" : MessageLookupByLibrary.simpleMessage("Energy"),
    "EnterValue" : MessageLookupByLibrary.simpleMessage("Enter Value"),
    "EveryNumberRaisedZero" : MessageLookupByLibrary.simpleMessage("Every number raised to zero equals one"),
    "Force" : MessageLookupByLibrary.simpleMessage("Force"),
    "FuelConsumption" : MessageLookupByLibrary.simpleMessage("Fuel consumption   "),
    "Gradians" : MessageLookupByLibrary.simpleMessage("Gradians (grad)"),
    "HeightAtAnyMoment" : MessageLookupByLibrary.simpleMessage("Height at any moment"),
    "HorizontalDistanceAtAnyTime" : MessageLookupByLibrary.simpleMessage("Horizontal distance at any time"),
    "IconsClear" : MessageLookupByLibrary.simpleMessage("This icon shows the clearing of the variable in the equation"),
    "MaximumHorizontalDistance" : MessageLookupByLibrary.simpleMessage("Maximum horizontal distance"),
    "Parallelepiped" : MessageLookupByLibrary.simpleMessage("Parallelepiped"),
    "PhysicsCalculator" : MessageLookupByLibrary.simpleMessage("Physics Calculator"),
    "Power" : MessageLookupByLibrary.simpleMessage("Power"),
    "Pressure" : MessageLookupByLibrary.simpleMessage("Pressure"),
    "Pythagoras" : MessageLookupByLibrary.simpleMessage("Pythagoras"),
    "Radians" : MessageLookupByLibrary.simpleMessage("Radians (rad)"),
    "Radiation" : MessageLookupByLibrary.simpleMessage("Radiation"),
    "RegularOctahedron" : MessageLookupByLibrary.simpleMessage("Regular octahedron"),
    "RegularTetrahedron" : MessageLookupByLibrary.simpleMessage("Regular tetrahedron"),
    "Result" : MessageLookupByLibrary.simpleMessage("Result:"),
    "SelectMovement" : MessageLookupByLibrary.simpleMessage("Select the type of movement"),
    "SineTheorem" : MessageLookupByLibrary.simpleMessage("Sine theorem"),
    "Sound" : MessageLookupByLibrary.simpleMessage("Sound"),
    "Speed" : MessageLookupByLibrary.simpleMessage("Speed"),
    "Sphere" : MessageLookupByLibrary.simpleMessage("Sphere"),
    "SphericalCap" : MessageLookupByLibrary.simpleMessage("Spherical cap"),
    "SphericalWedge" : MessageLookupByLibrary.simpleMessage("Spherical wedge"),
    "SphericalZone" : MessageLookupByLibrary.simpleMessage("Spherical segment"),
    "StraightPrism" : MessageLookupByLibrary.simpleMessage("Straight prism"),
    "Tables" : MessageLookupByLibrary.simpleMessage("Tables"),
    "Time" : MessageLookupByLibrary.simpleMessage("Time"),
    "TransitiveProperty" : MessageLookupByLibrary.simpleMessage("Transitive property"),
    "UnitConverter" : MessageLookupByLibrary.simpleMessage("Unit converter"),
    "VerticalInitialVelocity" : MessageLookupByLibrary.simpleMessage("Vertical component of initial velocity"),
    "VerticalSpeed" : MessageLookupByLibrary.simpleMessage("Vertical speed at any time"),
    "WeUseMinusToT2" : MessageLookupByLibrary.simpleMessage("We now use - to find the value of t2"),
    "WeUseTheFollowingEquation" : MessageLookupByLibrary.simpleMessage("We use the following equation"),
    "aCannotBeGreaterThanC" : MessageLookupByLibrary.simpleMessage("a cannot be greater than c"),
    "aboutUs" : MessageLookupByLibrary.simpleMessage("About us"),
    "acceleration" : MessageLookupByLibrary.simpleMessage("Acceleration"),
    "adding" : MessageLookupByLibrary.simpleMessage("Adding..."),
    "addition" : MessageLookupByLibrary.simpleMessage("Addition"),
    "algebra" : MessageLookupByLibrary.simpleMessage("Algebra"),
    "anglEsubtraction" : MessageLookupByLibrary.simpleMessage("Angle subtraction"),
    "areaCalculator" : MessageLookupByLibrary.simpleMessage("Area Calculator"),
    "bCannotBeGreaterThanC" : MessageLookupByLibrary.simpleMessage("b cannot be greater than c"),
    "binomial" : MessageLookupByLibrary.simpleMessage("binomial"),
    "black" : MessageLookupByLibrary.simpleMessage("Black"),
    "blue" : MessageLookupByLibrary.simpleMessage("Blue"),
    "bodyAtMaximumHeight" : MessageLookupByLibrary.simpleMessage("The body is at its maximum height"),
    "chooseAnEquation" : MessageLookupByLibrary.simpleMessage("Choose an equation"),
    "circle" : MessageLookupByLibrary.simpleMessage("Circle"),
    "colaboration" : MessageLookupByLibrary.simpleMessage("If you would like to see this project come true, you can help us by sharing this app with your classmates, thank you."),
    "convertAdditionToMultiplication" : MessageLookupByLibrary.simpleMessage("Convert addition to multiplication"),
    "convertMultiplicationToAddition" : MessageLookupByLibrary.simpleMessage("Convert multiplication to addition"),
    "converting" : MessageLookupByLibrary.simpleMessage("We convert the data to the same unit (meters) to be\nable to add them, subtract them and everything else,\nit can be any unit, but we are going to use meters."),
    "convertingToDegree" : MessageLookupByLibrary.simpleMessage("This equation only accepts angle in degrees,\nwe are going to convert the angle to degrees"),
    "convertingToTheSameUnitMRUV" : MessageLookupByLibrary.simpleMessage("We convert the data to a same unit, we  need speed in m/s,\n distance in meters and time in seconds to be able\nto add them, subtract them and everything else"),
    "decimals" : MessageLookupByLibrary.simpleMessage("Decimals:"),
    "derivativesFromTheFundamental" : MessageLookupByLibrary.simpleMessage("Derivatives from the fundamental"),
    "diamond" : MessageLookupByLibrary.simpleMessage("Diamond"),
    "distance" : MessageLookupByLibrary.simpleMessage("Distance"),
    "dividing" : MessageLookupByLibrary.simpleMessage("Dividing..."),
    "division" : MessageLookupByLibrary.simpleMessage("Division"),
    "doesNotChangeAdditionOrSubtraction" : MessageLookupByLibrary.simpleMessage("The meaning of inequality does not change if you add \n or subtract a number from its two members"),
    "doesNotChangeMultiplyOrDivide" : MessageLookupByLibrary.simpleMessage("The meaning of inequality does not change if you multiply \n or divide a positive number to its two members"),
    "doubleAngle" : MessageLookupByLibrary.simpleMessage("Double angle"),
    "explanationNote0" : MessageLookupByLibrary.simpleMessage("When a body is thrown upwards, after reaching\na certain height it begins to fall, to determine\nits vertical speed in an instant of time it is necessary to\nknow if at that instant it is going up (Tsubida) or down,\nthe total time in the air known as flight time (Tv)"),
    "exponentProperties" : MessageLookupByLibrary.simpleMessage("Exponent Properties"),
    "exponents" : MessageLookupByLibrary.simpleMessage("Exponents"),
    "expressionOfLogarithms" : MessageLookupByLibrary.simpleMessage("Expression of logarithms"),
    "factoringFormulas" : MessageLookupByLibrary.simpleMessage("Factoring formulas"),
    "finalSpeed" : MessageLookupByLibrary.simpleMessage("Final Speed"),
    "fundamental" : MessageLookupByLibrary.simpleMessage("Fundamental"),
    "generalFormula" : MessageLookupByLibrary.simpleMessage("General Formula"),
    "goingDown" : MessageLookupByLibrary.simpleMessage("Going down"),
    "goingUp" : MessageLookupByLibrary.simpleMessage("Going up"),
    "gray" : MessageLookupByLibrary.simpleMessage("Gray"),
    "halfAngle" : MessageLookupByLibrary.simpleMessage("Half angle"),
    "height" : MessageLookupByLibrary.simpleMessage("Height"),
    "horizontal" : MessageLookupByLibrary.simpleMessage("Horizontal"),
    "horizontalInitialVelocity" : MessageLookupByLibrary.simpleMessage("Horizontal component of initial velocity"),
    "iconsOnTheUpper" : MessageLookupByLibrary.simpleMessage("Some icons will appear on the upper right"),
    "identities" : MessageLookupByLibrary.simpleMessage("Identities"),
    "imaginaryUnitProperty" : MessageLookupByLibrary.simpleMessage("Imaginary unit property"),
    "inclined" : MessageLookupByLibrary.simpleMessage("Inclined"),
    "informationIcon" : MessageLookupByLibrary.simpleMessage("This icon shows information and tips"),
    "initialSpeed" : MessageLookupByLibrary.simpleMessage("Initial Speed"),
    "initialSpeedZero" : MessageLookupByLibrary.simpleMessage("Sometimes the initial velocity is zero but sometimes it is not, if the statement says that a body is dropped or that a body starts from rest, then the initial velocity is zero. If it says that a body is thrown downward with x velocity, then the initial velocity is already greater than zero."),
    "length" : MessageLookupByLibrary.simpleMessage("Length"),
    "logarithmAndExponentialFunction" : MessageLookupByLibrary.simpleMessage("Logarithm and exponential function"),
    "logarithmProperty" : MessageLookupByLibrary.simpleMessage("Logarithm property"),
    "mass" : MessageLookupByLibrary.simpleMessage("Mass"),
    "maximumHeight" : MessageLookupByLibrary.simpleMessage("Maximum height"),
    "multiplesAndSubmultiples" : MessageLookupByLibrary.simpleMessage("Multiples and Submultiples"),
    "multiplication" : MessageLookupByLibrary.simpleMessage("Multiplication"),
    "multiplying" : MessageLookupByLibrary.simpleMessage("Multiplying..."),
    "negativeTimeExplanation" : MessageLookupByLibrary.simpleMessage("The symbol âÂ±â in a quadratic equation indicates \n that there may be 2 solutions, we will continue \n solving with a â+â (t1) and then we solve with \n a â-â (t2), as we are looking for time and time \n CANNOT be negative, our time will be the positive solution"),
    "noNgativeDistance" : MessageLookupByLibrary.simpleMessage("This exercise has no solution, there is no negative Distance"),
    "noNgativeSpeed" : MessageLookupByLibrary.simpleMessage("This exercise has no solution, there is no negative speed"),
    "noNgativeTime" : MessageLookupByLibrary.simpleMessage("This exercise has no solution, there is no negative time"),
    "noSolution" : MessageLookupByLibrary.simpleMessage("The negative value of the subradical quantity \n (what is inside the root) tells us that this \n problem has no solution"),
    "noSolutionNegativeSquare" : MessageLookupByLibrary.simpleMessage("This exercise has no solution, there is no square root of a negative number"),
    "noSolutionT" : MessageLookupByLibrary.simpleMessage("This problem has no solution"),
    "operationWithFractions" : MessageLookupByLibrary.simpleMessage("Operation with fractions"),
    "otherEquivalences" : MessageLookupByLibrary.simpleMessage("Other equivalences"),
    "others" : MessageLookupByLibrary.simpleMessage("Others"),
    "periodicTable" : MessageLookupByLibrary.simpleMessage("Periodic table \n (spanish)"),
    "pricing" : MessageLookupByLibrary.simpleMessage("A project like this has costs to pay for licenses, to maintain the domain of the website you also have to pay some money annually, one way to maintain this project without the student having to pay a penny is by getting a high number of users"),
    "productFormulas" : MessageLookupByLibrary.simpleMessage("Product formulas"),
    "propertyOfComplexNumbers" : MessageLookupByLibrary.simpleMessage("Property of complex numbers"),
    "propertyOfInequality" : MessageLookupByLibrary.simpleMessage("Property of inequality"),
    "propertyOfNonNegativity" : MessageLookupByLibrary.simpleMessage("Property of non-negativity"),
    "raisingPower3" : MessageLookupByLibrary.simpleMessage("Raising to the power 3..."),
    "reciprocalProperty" : MessageLookupByLibrary.simpleMessage("Reciprocal property"),
    "rectangle" : MessageLookupByLibrary.simpleMessage("Rectangle"),
    "rhomboid" : MessageLookupByLibrary.simpleMessage("Rhomboid"),
    "rootsAreRealAndDiferent" : MessageLookupByLibrary.simpleMessage("If Î > 0 the roots are real and of different value"),
    "rootsAreRealAndEqual" : MessageLookupByLibrary.simpleMessage("If Î = 0 the roots are real and equal"),
    "rootsImaginarySolution" : MessageLookupByLibrary.simpleMessage("If Î < 0 the roots are not real (they have an \nimaginary solution)"),
    "secondDegree" : MessageLookupByLibrary.simpleMessage("Second degree"),
    "setting" : MessageLookupByLibrary.simpleMessage("Setting"),
    "solvingAdditionAndSubtraction" : MessageLookupByLibrary.simpleMessage("Solving addition and subtraction..."),
    "solvingExponents" : MessageLookupByLibrary.simpleMessage("Solving Exponents"),
    "solvingTheCosecant" : MessageLookupByLibrary.simpleMessage("Solving the cosecant..."),
    "solvingTheCosines" : MessageLookupByLibrary.simpleMessage("Solving the cosines..."),
    "solvingTheSecant" : MessageLookupByLibrary.simpleMessage("Solving the secant..."),
    "solvingTheSines" : MessageLookupByLibrary.simpleMessage("Solving the sines..."),
    "solvingTheSquareRoot" : MessageLookupByLibrary.simpleMessage("Solving the square root..."),
    "speed" : MessageLookupByLibrary.simpleMessage("Speed"),
    "speedAffterFlightTime" : MessageLookupByLibrary.simpleMessage("The vertical speed for a time equal to or greater than\nthe flight time will be zero because it is already on the floor"),
    "speedAtAnyTime" : MessageLookupByLibrary.simpleMessage("Speed at any time or any height"),
    "speedBodyIsFaling" : MessageLookupByLibrary.simpleMessage("As we can see the body is falling, we calculate its speed like a free fall\nwhere initial V is zero and for the time we subtract the time it\ntook for it to rise at the maximunn height"),
    "speedLessThanMaximunHeight" : MessageLookupByLibrary.simpleMessage("We need speed for a time less than the time it takes \nto reach its maximum height, so we are going to calculate \nthat speed with the following equation:"),
    "square" : MessageLookupByLibrary.simpleMessage("Square"),
    "squaring" : MessageLookupByLibrary.simpleMessage("Squaring..."),
    "substitutingIntoEquation" : MessageLookupByLibrary.simpleMessage("Substituting the number into the equation..."),
    "subtracting" : MessageLookupByLibrary.simpleMessage("Subtracting..."),
    "subtraction" : MessageLookupByLibrary.simpleMessage("Subtraction"),
    "sumOfAngles" : MessageLookupByLibrary.simpleMessage("Sum of angles"),
    "target" : MessageLookupByLibrary.simpleMessage("Physical calculator is a project that aims to make a mobile application platform, website and community of students and teachers where we help each other without the students having to pay"),
    "temperature" : MessageLookupByLibrary.simpleMessage("Temperature"),
    "time" : MessageLookupByLibrary.simpleMessage("Time"),
    "timeOfFlight" : MessageLookupByLibrary.simpleMessage("Time of flight"),
    "timeToGoUpSameTimeToGoDown" : MessageLookupByLibrary.simpleMessage("The time it takes to reach its maximum height is the\nsame time it takes to descend to the ground, the time it is in\nthe air is known as the flight time (Tv) and for this exercise\nit is equal to"),
    "trapeze" : MessageLookupByLibrary.simpleMessage("Trapeze"),
    "triangle" : MessageLookupByLibrary.simpleMessage("Triangle"),
    "trigonometry" : MessageLookupByLibrary.simpleMessage("Trigonometry"),
    "twoResultsCuadratic" : MessageLookupByLibrary.simpleMessage("The symbol Â± in a quadratic equation indicates \n that there can be up to 2 solutions, we will continue \n solving with + (x_1), and then we solve with - (x_2)"),
    "twoSolutions" : MessageLookupByLibrary.simpleMessage("This problem has two solutions"),
    "unknown" : MessageLookupByLibrary.simpleMessage("Unknown:"),
    "usingMinusSymbol" : MessageLookupByLibrary.simpleMessage("We now use minus (-) to find the value of x2"),
    "usingPlusSymbol" : MessageLookupByLibrary.simpleMessage("We now use plus (+) to find the value of x1"),
    "vertical" : MessageLookupByLibrary.simpleMessage("Vertical"),
    "volume" : MessageLookupByLibrary.simpleMessage("Volume"),
    "volumeCalculator" : MessageLookupByLibrary.simpleMessage("Volume Calculator"),
    "vyAtMaximiunHeight" : MessageLookupByLibrary.simpleMessage("Vy is zero because at this time it has reached its maximum\nheight and is preparing for a free fall."),
    "vyOnTheFloor" : MessageLookupByLibrary.simpleMessage("Vy is zero because it is already on the floor"),
    "wallpapers" : MessageLookupByLibrary.simpleMessage("Wallpapers:"),
    "webAdrees" : MessageLookupByLibrary.simpleMessage("learn more by clicking here (spanish)"),
    "whoMenyDecimal" : MessageLookupByLibrary.simpleMessage("How many decimals do you want to use?"),
    "whoMenyDecimalAngle" : MessageLookupByLibrary.simpleMessage("How many decimals do you want to use in sine, cosine, tangent and angles?"),
    "x1noSolution" : MessageLookupByLibrary.simpleMessage("X1 = No solution"),
    "x2noSolution" : MessageLookupByLibrary.simpleMessage("X2 = No solution")
  };
}
